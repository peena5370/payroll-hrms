<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.payroll.mapper.AmsLoanMapper">
  <resultMap id="BaseResultMap" type="com.company.payroll.model.AmsLoan">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ref_num" jdbcType="VARCHAR" property="refNum" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="date_repay_from" jdbcType="DATE" property="dateRepayFrom" />
    <result column="date_repay_to" jdbcType="DATE" property="dateRepayTo" />
    <result column="repay_balance" jdbcType="DECIMAL" property="repayBalance" />
    <result column="date_apply" jdbcType="DATE" property="dateApply" />
    <result column="date_approved" jdbcType="DATE" property="dateApproved" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="staff_id" jdbcType="BIGINT" property="staffId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, ref_num, reason, amount, date_repay_from, date_repay_to, repay_balance, date_apply, 
    date_approved, status, staff_id
  </sql>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ams_loan
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_loan
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ams_loan
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.company.payroll.model.AmsLoan">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ams_loan (id, ref_num, reason, amount, 
      date_repay_from, date_repay_to, repay_balance, 
      date_apply, date_approved, status, 
      staff_id)
    values (#{id,jdbcType=BIGINT}, }#{refNum,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
      #{dateRepayFrom,jdbcType=DATE}, #{dateRepayTo,jdbcType=DATE}, #{repayBalance,jdbcType=DECIMAL}, 
      #{dateApply,jdbcType=DATE}, #{dateApproved,jdbcType=DATE}, #{status,jdbcType=TINYINT}, 
      #{staffId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.company.payroll.model.AmsLoan">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ams_loan
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="refNum != null">
        ref_num,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="dateRepayFrom != null">
        date_repay_from,
      </if>
      <if test="dateRepayTo != null">
        date_repay_to,
      </if>
      <if test="repayBalance != null">
        repay_balance,
      </if>
      <if test="dateApply != null">
        date_apply,
      </if>
      <if test="dateApproved != null">
        date_approved,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refNum != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="refNum != null">
        #{refNum,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="dateRepayFrom != null">
        #{dateRepayFrom,jdbcType=DATE},
      </if>
      <if test="dateRepayTo != null">
        #{dateRepayTo,jdbcType=DATE},
      </if>
      <if test="repayBalance != null">
        #{repayBalance,jdbcType=DECIMAL},
      </if>
      <if test="dateApply != null">
        #{dateApply,jdbcType=DATE},
      </if>
      <if test="dateApproved != null">
        #{dateApproved,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.payroll.model.AmsLoan">
    update ams_loan
    <set>
      <if test="refNum != null">
        ref_num = #{refNum,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="dateRepayFrom != null">
        date_repay_from = #{dateRepayFrom,jdbcType=DATE},
      </if>
      <if test="dateRepayTo != null">
        date_repay_to = #{dateRepayTo,jdbcType=DATE},
      </if>
      <if test="repayBalance != null">
        repay_balance = #{repayBalance,jdbcType=DECIMAL},
      </if>
      <if test="dateApply != null">
        date_apply = #{dateApply,jdbcType=DATE},
      </if>
      <if test="dateApproved != null">
        date_approved = #{dateApproved,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.payroll.model.AmsLoan">
    update ams_loan
    set ref_num = #{refNum,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=DECIMAL},
      date_repay_from = #{dateRepayFrom,jdbcType=DATE},
      date_repay_to = #{dateRepayTo,jdbcType=DATE},
      repay_balance = #{repayBalance,jdbcType=DECIMAL},
      date_apply = #{dateApply,jdbcType=DATE},
      date_approved = #{dateApproved,jdbcType=DATE},
      status = #{status,jdbcType=TINYINT},
      staff_id = #{staffId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>