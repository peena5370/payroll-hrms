<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.payroll.mapper.FileAttachmentMapper">
  <resultMap id="BaseResultMap" type="com.company.payroll.model.FileAttachment">
    <id column="f_id" jdbcType="INTEGER" property="fId" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="BIGINT" property="fileSize" />
    <result column="attachment_path" jdbcType="VARCHAR" property="attachmentPath" />
    <result column="m_id" jdbcType="INTEGER" property="mId" />
    <result column="e_id" jdbcType="INTEGER" property="eId" />
  </resultMap>
  <sql id="tb">file_attachment</sql>
  <sql id="Base_Column_List">
    f_id, file_name, file_size, attachment_path, m_id, e_id
  </sql>
  <select id="selectListByEId"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select f_id, file_name, file_size, attachment_path, m_id, e_id
    from file_attachment
    where e_id = #{eId,jdbcType=INTEGER}
  </select>
  <select id="selectListByMId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select f_id, file_name, file_size, attachment_path, m_id, e_id
    from file_attachment
    where m_id = #{mId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select f_id, file_name, file_size, attachment_path, m_id, e_id
    from file_attachment
    where f_id = #{fId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from file_attachment
    where f_id = #{fId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.company.payroll.model.FileAttachment">
    insert into file_attachment (f_id, file_name, file_size, 
      attachment_path, m_id, e_id)
    values (#{fId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, 
      #{attachmentPath,jdbcType=VARCHAR}, #{mId,jdbcType=INTEGER}, #{eId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.company.payroll.model.FileAttachment">
    insert into file_attachment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        f_id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="attachmentPath != null">
        attachment_path,
      </if>
      <if test="mId != null">
        m_id,
      </if>
      <if test="eId != null">
        e_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fId != null">
        #{fId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="attachmentPath != null">
        #{attachmentPath,jdbcType=VARCHAR},
      </if>
      <if test="mId != null">
        #{mId,jdbcType=INTEGER},
      </if>
      <if test="eId != null">
        #{eId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.payroll.model.FileAttachment">
    update file_attachment
    <set>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="attachmentPath != null">
        attachment_path = #{attachmentPath,jdbcType=VARCHAR},
      </if>
      <if test="mId != null">
        m_id = #{mId,jdbcType=INTEGER},
      </if>
      <if test="eId != null">
        e_id = #{eId,jdbcType=INTEGER},
      </if>
    </set>
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.payroll.model.FileAttachment">
    update file_attachment
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      attachment_path = #{attachmentPath,jdbcType=VARCHAR},
      m_id = #{mId,jdbcType=INTEGER},
      e_id = #{eId,jdbcType=INTEGER}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
</mapper>