<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.payroll.mapper.StaffLeaveDetailsMapper">
  <resultMap id="BaseResultMap" type="com.company.payroll.model.StaffLeaveDetails">
    <id column="ld_id" jdbcType="INTEGER" property="ldId" />
    <result column="annual_leave" jdbcType="INTEGER" property="annualLeave" />
    <result column="hospitality_leave" jdbcType="INTEGER" property="hospitalityLeave" />
    <result column="maternity_leave" jdbcType="INTEGER" property="maternityLeave" />
    <result column="unpaid_leave" jdbcType="INTEGER" property="unpaidLeave" />
  </resultMap>
  <sql id="Base_Column_List">
    ld_id, annual_leave, hospitality_leave, maternity_leave, unpaid_leave
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff_leave_details
    where ld_id = #{ldId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff_leave_details
    where ld_id = #{ldId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.company.payroll.model.StaffLeaveDetails">
    insert into staff_leave_details (ld_id, annual_leave, hospitality_leave, 
      maternity_leave, unpaid_leave)
    values (#{ldId,jdbcType=INTEGER}, #{annualLeave,jdbcType=INTEGER}, #{hospitalityLeave,jdbcType=INTEGER}, 
      #{maternityLeave,jdbcType=INTEGER}, #{unpaidLeave,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.company.payroll.model.StaffLeaveDetails">
    insert into staff_leave_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ldId != null">
        ld_id,
      </if>
      <if test="annualLeave != null">
        annual_leave,
      </if>
      <if test="hospitalityLeave != null">
        hospitality_leave,
      </if>
      <if test="maternityLeave != null">
        maternity_leave,
      </if>
      <if test="unpaidLeave != null">
        unpaid_leave,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ldId != null">
        #{ldId,jdbcType=INTEGER},
      </if>
      <if test="annualLeave != null">
        #{annualLeave,jdbcType=INTEGER},
      </if>
      <if test="hospitalityLeave != null">
        #{hospitalityLeave,jdbcType=INTEGER},
      </if>
      <if test="maternityLeave != null">
        #{maternityLeave,jdbcType=INTEGER},
      </if>
      <if test="unpaidLeave != null">
        #{unpaidLeave,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.payroll.model.StaffLeaveDetails">
    update staff_leave_details
    <set>
      <if test="annualLeave != null">
        annual_leave = #{annualLeave,jdbcType=INTEGER},
      </if>
      <if test="hospitalityLeave != null">
        hospitality_leave = #{hospitalityLeave,jdbcType=INTEGER},
      </if>
      <if test="maternityLeave != null">
        maternity_leave = #{maternityLeave,jdbcType=INTEGER},
      </if>
      <if test="unpaidLeave != null">
        unpaid_leave = #{unpaidLeave,jdbcType=INTEGER},
      </if>
    </set>
    where ld_id = #{ldId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.payroll.model.StaffLeaveDetails">
    update staff_leave_details
    set annual_leave = #{annualLeave,jdbcType=INTEGER},
      hospitality_leave = #{hospitalityLeave,jdbcType=INTEGER},
      maternity_leave = #{maternityLeave,jdbcType=INTEGER},
      unpaid_leave = #{unpaidLeave,jdbcType=INTEGER}
    where ld_id = #{ldId,jdbcType=INTEGER}
  </update>
</mapper>