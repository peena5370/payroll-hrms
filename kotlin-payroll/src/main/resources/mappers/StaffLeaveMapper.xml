<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.payroll.mapper.StaffLeaveMapper">
  <resultMap id="BaseResultMap" type="com.company.payroll.model.StaffLeave">
    <id column="l_id" jdbcType="INTEGER" property="lId" />
    <result column="ref_num" jdbcType="VARCHAR" property="refNum" />
    <result column="leave_type" jdbcType="VARCHAR" property="leaveType" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="application_date" jdbcType="DATE" property="applicationDate" />
    <result column="date_from" jdbcType="TIMESTAMP" property="dateFrom" />
    <result column="date_to" jdbcType="TIMESTAMP" property="dateTo" />
    <result column="leave_status" jdbcType="TINYINT" property="leaveStatus" />
    <result column="approved_date" jdbcType="DATE" property="approvedDate" />
    <result column="staff_id" jdbcType="INTEGER" property="staffId" />
  </resultMap>
  <sql id="Base_Column_List">
    l_id, ref_num, leave_type, reason, application_date, date_from, date_to, leave_status, 
    approved_date, staff_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from staff_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from staff_leave
    where l_id = #{lId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.company.payroll.model.StaffLeave">
    insert into staff_leave (l_id, ref_num, leave_type, 
      reason, application_date, date_from, 
      date_to, leave_status, approved_date, 
      staff_id)
    values (#{lId,jdbcType=INTEGER}, #{refNum,jdbcType=VARCHAR}, #{leaveType,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{applicationDate,jdbcType=DATE}, #{dateFrom,jdbcType=TIMESTAMP}, 
      #{dateTo,jdbcType=TIMESTAMP}, #{leaveStatus,jdbcType=TINYINT}, #{approvedDate,jdbcType=DATE}, 
      #{staffId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.company.payroll.model.StaffLeave">
    insert into staff_leave
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        l_id,
      </if>
      <if test="refNum != null">
        ref_num,
      </if>
      <if test="leaveType != null">
        leave_type,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="applicationDate != null">
        application_date,
      </if>
      <if test="dateFrom != null">
        date_from,
      </if>
      <if test="dateTo != null">
        date_to,
      </if>
      <if test="leaveStatus != null">
        leave_status,
      </if>
      <if test="approvedDate != null">
        approved_date,
      </if>
      <if test="staffId != null">
        staff_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lId != null">
        #{lId,jdbcType=INTEGER},
      </if>
      <if test="refNum != null">
        #{refNum,jdbcType=VARCHAR},
      </if>
      <if test="leaveType != null">
        #{leaveType,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="applicationDate != null">
        #{applicationDate,jdbcType=DATE},
      </if>
      <if test="dateFrom != null">
        #{dateFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="dateTo != null">
        #{dateTo,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveStatus != null">
        #{leaveStatus,jdbcType=TINYINT},
      </if>
      <if test="approvedDate != null">
        #{approvedDate,jdbcType=DATE},
      </if>
      <if test="staffId != null">
        #{staffId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.payroll.model.StaffLeave">
    update staff_leave
    <set>
      <if test="refNum != null">
        ref_num = #{refNum,jdbcType=VARCHAR},
      </if>
      <if test="leaveType != null">
        leave_type = #{leaveType,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="applicationDate != null">
        application_date = #{applicationDate,jdbcType=DATE},
      </if>
      <if test="dateFrom != null">
        date_from = #{dateFrom,jdbcType=TIMESTAMP},
      </if>
      <if test="dateTo != null">
        date_to = #{dateTo,jdbcType=TIMESTAMP},
      </if>
      <if test="leaveStatus != null">
        leave_status = #{leaveStatus,jdbcType=TINYINT},
      </if>
      <if test="approvedDate != null">
        approved_date = #{approvedDate,jdbcType=DATE},
      </if>
      <if test="staffId != null">
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
    </set>
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.payroll.model.StaffLeave">
    update staff_leave
    set ref_num = #{refNum,jdbcType=VARCHAR},
      leave_type = #{leaveType,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      application_date = #{applicationDate,jdbcType=DATE},
      date_from = #{dateFrom,jdbcType=TIMESTAMP},
      date_to = #{dateTo,jdbcType=TIMESTAMP},
      leave_status = #{leaveStatus,jdbcType=TINYINT},
      approved_date = #{approvedDate,jdbcType=DATE},
      staff_id = #{staffId,jdbcType=INTEGER}
    where l_id = #{lId,jdbcType=INTEGER}
  </update>
</mapper>